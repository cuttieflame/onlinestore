{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel OpenApi Demo Documentation",
        "description": "L5 Swagger OpenApi description",
        "contact": {
            "email": "kokodah222@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api/v1",
            "description": "Demo API Server"
        }
    ],
    "paths": {
        "/cart": {
            "get": {
                "tags": [
                    "Carts"
                ],
                "summary": "Get list of user cart",
                "description": "Returns list of user cart",
                "operationId": "getUserCartList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "403": {
                        "description": "Cart not found"
                    }
                }
            }
        },
        "/cart/add/{product_id}": {
            "post": {
                "tags": [
                    "Carts"
                ],
                "summary": "Store new produt",
                "description": "Create new product",
                "operationId": "storeNewCartProduct",
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Product not found"
                    }
                }
            }
        },
        "/cart/quantity": {
            "put": {
                "tags": [
                    "Carts"
                ],
                "summary": "cart add product",
                "description": "Cart add product",
                "operationId": "CartAddProduct",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "403": {
                        "description": "Cart not found"
                    }
                }
            }
        },
        "/cart/delete/{product_id}": {
            "delete": {
                "tags": [
                    "Carts"
                ],
                "summary": "cart delete product",
                "description": "Cart delete product",
                "operationId": "CartDeleteProduct",
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "description": "Product id for delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "403": {
                        "description": "Cart not found"
                    }
                }
            }
        },
        "/cart/clear": {
            "post": {
                "tags": [
                    "Carts"
                ],
                "summary": "cart clear",
                "description": "Cart clear",
                "operationId": "CartClear",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Cart error"
                    }
                }
            }
        },
        "/cart/total": {
            "post": {
                "tags": [
                    "Carts"
                ],
                "summary": "cart total",
                "description": "Cart total",
                "operationId": "CartTotal",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "403": {
                        "description": "Cart error"
                    }
                }
            }
        },
        "/category/{id}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get list of categories",
                "description": "Returns list of categories",
                "operationId": "getCategories",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category id,if id = 0, then it is needed for the search,if id > 0 its for categories",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "br",
                        "in": "query",
                        "description": "brands,example ?br=1,2,3,4 "
                    },
                    {
                        "name": "o",
                        "in": "query",
                        "description": "parameters (pr-in|pr-de), it means that it sorts products by price increase, if pr-de, then vice versa by decrease"
                    },
                    {
                        "name": "s",
                        "in": "query",
                        "description": "parameters (new|old) if (new) sorts by novelty and if (old) by old age"
                    },
                    {
                        "name": "min",
                        "in": "query",
                        "description": "min price,example ?min=123"
                    },
                    {
                        "name": "max",
                        "in": "query",
                        "description": "max price,example ?max=5000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Category not found"
                    }
                }
            }
        },
        "/coupons": {
            "get": {
                "tags": [
                    "Coupons"
                ],
                "summary": "Get list of coupons",
                "description": "Returns list of coupons",
                "operationId": "getCouponsList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        },
        "/coupons/make": {
            "post": {
                "tags": [
                    "Coupons"
                ],
                "summary": "Store new coupon",
                "description": "Create new coupon",
                "operationId": "couponMade",
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        },
        "/coupons/{coupon}": {
            "get": {
                "tags": [
                    "Coupons"
                ],
                "summary": "Change currency",
                "description": "Change coupon currency",
                "operationId": "changeCouponCurrency",
                "parameters": [
                    {
                        "name": "coupon",
                        "in": "path",
                        "description": "coupon slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Coupon not found"
                    }
                }
            }
        },
        "/currency/{currencyCode}": {
            "get": {
                "tags": [
                    "Currency"
                ],
                "summary": "change session currency",
                "description": "change session currency",
                "operationId": "changeSessionCurrency",
                "parameters": [
                    {
                        "name": "currencyCode",
                        "in": "path",
                        "description": "Currency code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Currency not found"
                    }
                }
            }
        },
        "/currentValues": {
            "get": {
                "tags": [
                    "Currency"
                ],
                "summary": "change currency",
                "description": "change currency",
                "operationId": "changeCurrency",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        },
        "/favorite": {
            "get": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Get list of user favorites",
                "description": "Returns list of user favorites",
                "operationId": "getUserFavoritesList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "403": {
                        "description": "Favorite not found"
                    }
                }
            }
        },
        "/favorite/add/{product_id}": {
            "post": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Store new cart product",
                "description": "Store new cart product",
                "operationId": "storeNewFavoriteProduct",
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Product not found"
                    }
                }
            }
        },
        "/favorite/delete/{product_id}": {
            "delete": {
                "tags": [
                    "Favorites"
                ],
                "summary": "cart delete product",
                "description": "Cart delete product",
                "operationId": "FavoriteDeleteProduct",
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "description": "Product id for delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "403": {
                        "description": "Cart not found"
                    }
                }
            }
        },
        "/favorite/clear": {
            "post": {
                "tags": [
                    "Favorites"
                ],
                "summary": "favorite clear",
                "description": "Favorite clear",
                "operationId": "FavoriteClear",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "403": {
                        "description": "Cart error"
                    }
                }
            }
        },
        "/favorite/total": {
            "post": {
                "tags": [
                    "Favorites"
                ],
                "summary": "favorite total",
                "description": "Favorite total",
                "operationId": "FavoriteTotal",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "403": {
                        "description": "Cart error"
                    }
                }
            }
        },
        "/order/make/{id}": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "create new order",
                "description": "Create new order",
                "operationId": "MakeNewOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get list of products",
                "description": "Returns list of products",
                "operationId": "getProductsList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Error"
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get list of user products",
                "description": "Returns list of user products",
                "operationId": "getUserProductsList",
                "parameters": [
                    {
                        "name": "t",
                        "in": "query",
                        "description": "query - main or dsh.Example-api/v1/products/1?t=main or 1?t=dsh",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Product not found"
                    }
                }
            }
        },
        "/products/create": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Store new produt",
                "description": "Create new product",
                "operationId": "storeCoupon",
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/products/image/{product_id}": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Store new product image",
                "description": "Create new product image",
                "operationId": "storeProductImage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/products/delete": {
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete existing product",
                "description": "Delete a productt",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "pr",
                        "in": "query",
                        "description": "Products ids",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/brands_categories": {
            "get": {
                "tags": [
                    "BrandsAndCategories"
                ],
                "summary": "Get list of brands and categories",
                "description": "Returns list of brands and categories",
                "operationId": "getBrandsAndCategoriesList",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Нет таких записей"
                    }
                }
            }
        },
        "/stripe": {
            "get": {
                "tags": [
                    "Stripe"
                ],
                "summary": "Get list of user stripe checkout session and subscription",
                "description": "get list of user stripe checkout session and subscriptions",
                "operationId": "getUserStripeCheckoutSessionAndSubscription",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/stripe/allproducts": {
            "get": {
                "tags": [
                    "Stripe"
                ],
                "summary": "Get list of stripe products",
                "description": "Returns list of stripe products",
                "operationId": "getAllStripeProducts",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/stripe/add/product": {
            "post": {
                "tags": [
                    "Stripe"
                ],
                "summary": "Create new stripe product",
                "description": "Create new stripe product",
                "operationId": "StripeAddProduct",
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/stripe/add/customer/{id}": {
            "post": {
                "tags": [
                    "Stripe"
                ],
                "summary": "Create new stripe customer",
                "description": "Create new stripe customer",
                "operationId": "StripeAddCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/stripe/products/{id}": {
            "get": {
                "tags": [
                    "Stripe"
                ],
                "summary": "Get list of user stripe products",
                "description": "Returns list of user stripe products",
                "operationId": "getUserStripeProducts",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/user/subscriptions": {
            "get": {
                "tags": [
                    "Stripe"
                ],
                "summary": "Get list of user stripe subscriptions",
                "description": "Returns list of user stripe subscripions",
                "operationId": "getUserStripeSubscription",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get list of user",
                "description": "Returns list of user",
                "operationId": "getUser",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "403": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/user/update/{id}": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update user",
                "description": "Update user",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "403": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/user/updateImage/{id}": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Update user image",
                "description": "Update user image",
                "operationId": "updateUserImage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "403": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/user/destroy/{id}": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete user",
                "description": "Delete user",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "403": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/password/password-reset": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "User password reset",
                "description": "User password reset",
                "operationId": "UserPasswordReset",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "403": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/email/resend": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "User email resend",
                "description": "User email resend",
                "operationId": "email resend",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/email/verify/{id}/{hash}}": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Email verify",
                "description": "Email verify",
                "operationId": "EmailVerify",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "Hash",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Projects",
            "description": "API Endpoints of Projects"
        }
    ]
}